{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import{AppBar,Toolbar,Button,Container,Grid,Card,CardContent,Typography,List,ListItem,ListItemText,TextField,Box}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Dashboard(_ref){let{onLogout}=_ref;const[stats,setStats]=useState({balance:0,holdings:[]});const[order,setOrder]=useState({symbol:'',qty:''});const navigate=useNavigate();// Fetch user stats on mount\nuseEffect(()=>{fetch('/api/users/me/stats').then(res=>res.json()).then(data=>setStats(data)).catch(()=>alert('Could not load stats'));},[]);// Handlers for header buttons\nconst handleHome=()=>{navigate('/');};const handleDashboard=()=>{navigate('/dashboard');};const handleLogout=()=>{// clear stored credentials\nlocalStorage.removeItem('username');navigate('/login');console.log(\"handle logout called\");onLogout();};// Handle form field changes\nconst handleOrderChange=e=>setOrder(o=>({...o,[e.target.name]:e.target.value}));// Place trade\nconst placeOrder=async()=>{const username=localStorage.getItem('username')||'unknown';const payload={...order,username};const res=await fetch('/api/trades',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});if(res.ok){alert(`Order placed by ${payload.username}: ${payload.qty} shares of ${payload.symbol}`);// optionally re‑fetch stats\n}else{alert('Order failed');}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(AppBar,{position:\"static\",children:/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(Button,{color:\"inherit\",onClick:handleHome,children:\"Home\"}),/*#__PURE__*/_jsx(Button,{color:\"inherit\",onClick:handleDashboard,children:\"Dashboard\"}),/*#__PURE__*/_jsx(Button,{color:\"inherit\",onClick:handleLogout,children:\"Logout\"})]})}),/*#__PURE__*/_jsx(Container,{sx:{mt:4},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(Card,{sx:{borderRadius:2},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Account Balance\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",color:\"primary\",children:[\"$\",stats.balance.toFixed(2)]}),/*#__PURE__*/_jsxs(Box,{mt:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Your Holdings\"}),/*#__PURE__*/_jsx(List,{children:stats.holdings.map(h=>/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:`${h.symbol}: ${h.shares} shares`,secondary:`Avg cost: $${h.avgCost.toFixed(2)}`})},h.symbol))})]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,children:/*#__PURE__*/_jsx(Card,{sx:{borderRadius:2},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Place Order\"}),/*#__PURE__*/_jsxs(Box,{component:\"form\",sx:{display:'flex',gap:2,flexWrap:'wrap',alignItems:'center'},onSubmit:e=>{e.preventDefault();placeOrder();},children:[/*#__PURE__*/_jsx(TextField,{label:\"Symbol\",name:\"symbol\",value:order.symbol,onChange:handleOrderChange,required:true}),/*#__PURE__*/_jsx(TextField,{label:\"Quantity\",name:\"qty\",type:\"number\",value:order.qty,onChange:handleOrderChange,required:true}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",sx:{borderRadius:2,mt:1},children:\"Buy / Sell\"})]})]})})})]})})]});}","map":{"version":3,"names":["React","useEffect","useState","useNavigate","AppBar","Toolbar","Button","Container","Grid","Card","CardContent","Typography","List","ListItem","ListItemText","TextField","Box","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Dashboard","_ref","onLogout","stats","setStats","balance","holdings","order","setOrder","symbol","qty","navigate","fetch","then","res","json","data","catch","alert","handleHome","handleDashboard","handleLogout","localStorage","removeItem","console","log","handleOrderChange","e","o","target","name","value","placeOrder","username","getItem","payload","method","headers","body","JSON","stringify","ok","children","position","color","onClick","sx","mt","container","spacing","item","xs","md","borderRadius","variant","gutterBottom","toFixed","map","h","primary","shares","secondary","avgCost","component","display","gap","flexWrap","alignItems","onSubmit","preventDefault","label","onChange","required","type"],"sources":["/Users/benjaminzou/Desktop/CornellProjects/TradingPlatform/client/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  AppBar,\n  Toolbar,\n  Button,\n  Container,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  TextField,\n  Box,\n} from '@mui/material';\n\nexport default function Dashboard({ onLogout }) {\n  const [stats, setStats] = useState({ balance: 0, holdings: [] });\n  const [order, setOrder] = useState({ symbol: '', qty: '' });\n  const navigate = useNavigate();\n\n  // Fetch user stats on mount\n  useEffect(() => {\n    fetch('/api/users/me/stats')\n      .then(res => res.json())\n      .then(data => setStats(data))\n      .catch(() => alert('Could not load stats'));\n  }, []);\n\n  // Handlers for header buttons\n  const handleHome = () => {\n    navigate('/');\n  };\n  const handleDashboard = () => {\n    navigate('/dashboard');\n  };\n  const handleLogout = () => {\n    // clear stored credentials\n    localStorage.removeItem('username');\n    navigate('/login');\n    console.log(\"handle logout called\");\n    onLogout();\n  };\n\n  // Handle form field changes\n  const handleOrderChange = e =>\n    setOrder(o => ({ ...o, [e.target.name]: e.target.value }));\n\n  // Place trade\n  const placeOrder = async () => {\n    const username = localStorage.getItem('username') || 'unknown';\n    const payload = { ...order, username };\n\n    const res = await fetch('/api/trades', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload),\n    });\n\n    if (res.ok) {\n      alert(`Order placed by ${payload.username}: ${payload.qty} shares of ${payload.symbol}`);\n      // optionally re‑fetch stats\n    } else {\n      alert('Order failed');\n    }\n  };\n\n  return (\n    <>\n      {/* HEADER */}\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Button color=\"inherit\" onClick={handleHome}>\n            Home\n          </Button>\n          <Button color=\"inherit\" onClick={handleDashboard}>\n            Dashboard\n          </Button>\n          <Button color=\"inherit\" onClick={handleLogout}>\n            Logout\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      {/* MAIN CONTENT */}\n      <Container sx={{ mt: 4 }}>\n        <Grid container spacing={2}>\n          {/* Stats Panel */}\n          <Grid item xs={12} md={4}>\n            <Card sx={{ borderRadius: 2 }}>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Account Balance\n                </Typography>\n                <Typography variant=\"h4\" color=\"primary\">\n                  ${stats.balance.toFixed(2)}\n                </Typography>\n                <Box mt={4}>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Your Holdings\n                  </Typography>\n                  <List>\n                    {stats.holdings.map(h => (\n                      <ListItem key={h.symbol}>\n                        <ListItemText\n                          primary={`${h.symbol}: ${h.shares} shares`}\n                          secondary={`Avg cost: $${h.avgCost.toFixed(2)}`}\n                        />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          {/* Trade Panel */}\n          <Grid item xs={12} md={8}>\n            <Card sx={{ borderRadius: 2 }}>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Place Order\n                </Typography>\n                <Box\n                  component=\"form\"\n                  sx={{\n                    display: 'flex',\n                    gap: 2,\n                    flexWrap: 'wrap',\n                    alignItems: 'center',\n                  }}\n                  onSubmit={e => {\n                    e.preventDefault();\n                    placeOrder();\n                  }}\n                >\n                  <TextField\n                    label=\"Symbol\"\n                    name=\"symbol\"\n                    value={order.symbol}\n                    onChange={handleOrderChange}\n                    required\n                  />\n                  <TextField\n                    label=\"Quantity\"\n                    name=\"qty\"\n                    type=\"number\"\n                    value={order.qty}\n                    onChange={handleOrderChange}\n                    required\n                  />\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    sx={{ borderRadius: 2, mt: 1 }}\n                  >\n                    Buy / Sell\n                  </Button>\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OACEC,MAAM,CACNC,OAAO,CACPC,MAAM,CACNC,SAAS,CACTC,IAAI,CACJC,IAAI,CACJC,WAAW,CACXC,UAAU,CACVC,IAAI,CACJC,QAAQ,CACRC,YAAY,CACZC,SAAS,CACTC,GAAG,KACE,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEvB,cAAe,SAAS,CAAAC,SAASA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC5C,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGzB,QAAQ,CAAC,CAAE0B,OAAO,CAAE,CAAC,CAAEC,QAAQ,CAAE,EAAG,CAAC,CAAC,CAChE,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAG7B,QAAQ,CAAC,CAAE8B,MAAM,CAAE,EAAE,CAAEC,GAAG,CAAE,EAAG,CAAC,CAAC,CAC3D,KAAM,CAAAC,QAAQ,CAAG/B,WAAW,CAAC,CAAC,CAE9B;AACAF,SAAS,CAAC,IAAM,CACdkC,KAAK,CAAC,qBAAqB,CAAC,CACzBC,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,EAAIZ,QAAQ,CAACY,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAAC,IAAMC,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAC/C,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvBR,QAAQ,CAAC,GAAG,CAAC,CACf,CAAC,CACD,KAAM,CAAAS,eAAe,CAAGA,CAAA,GAAM,CAC5BT,QAAQ,CAAC,YAAY,CAAC,CACxB,CAAC,CACD,KAAM,CAAAU,YAAY,CAAGA,CAAA,GAAM,CACzB;AACAC,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC,CACnCZ,QAAQ,CAAC,QAAQ,CAAC,CAClBa,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CACnCvB,QAAQ,CAAC,CAAC,CACZ,CAAC,CAED;AACA,KAAM,CAAAwB,iBAAiB,CAAGC,CAAC,EACzBnB,QAAQ,CAACoB,CAAC,GAAK,CAAE,GAAGA,CAAC,CAAE,CAACD,CAAC,CAACE,MAAM,CAACC,IAAI,EAAGH,CAAC,CAACE,MAAM,CAACE,KAAM,CAAC,CAAC,CAAC,CAE5D;AACA,KAAM,CAAAC,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,KAAM,CAAAC,QAAQ,CAAGX,YAAY,CAACY,OAAO,CAAC,UAAU,CAAC,EAAI,SAAS,CAC9D,KAAM,CAAAC,OAAO,CAAG,CAAE,GAAG5B,KAAK,CAAE0B,QAAS,CAAC,CAEtC,KAAM,CAAAnB,GAAG,CAAG,KAAM,CAAAF,KAAK,CAAC,aAAa,CAAE,CACrCwB,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,OAAO,CAC9B,CAAC,CAAC,CAEF,GAAIrB,GAAG,CAAC2B,EAAE,CAAE,CACVvB,KAAK,CAAC,mBAAmBiB,OAAO,CAACF,QAAQ,KAAKE,OAAO,CAACzB,GAAG,cAAcyB,OAAO,CAAC1B,MAAM,EAAE,CAAC,CACxF;AACF,CAAC,IAAM,CACLS,KAAK,CAAC,cAAc,CAAC,CACvB,CACF,CAAC,CAED,mBACErB,KAAA,CAAAE,SAAA,EAAA2C,QAAA,eAEE/C,IAAA,CAACd,MAAM,EAAC8D,QAAQ,CAAC,QAAQ,CAAAD,QAAA,cACvB7C,KAAA,CAACf,OAAO,EAAA4D,QAAA,eACN/C,IAAA,CAACZ,MAAM,EAAC6D,KAAK,CAAC,SAAS,CAACC,OAAO,CAAE1B,UAAW,CAAAuB,QAAA,CAAC,MAE7C,CAAQ,CAAC,cACT/C,IAAA,CAACZ,MAAM,EAAC6D,KAAK,CAAC,SAAS,CAACC,OAAO,CAAEzB,eAAgB,CAAAsB,QAAA,CAAC,WAElD,CAAQ,CAAC,cACT/C,IAAA,CAACZ,MAAM,EAAC6D,KAAK,CAAC,SAAS,CAACC,OAAO,CAAExB,YAAa,CAAAqB,QAAA,CAAC,QAE/C,CAAQ,CAAC,EACF,CAAC,CACJ,CAAC,cAGT/C,IAAA,CAACX,SAAS,EAAC8D,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAL,QAAA,cACvB7C,KAAA,CAACZ,IAAI,EAAC+D,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAP,QAAA,eAEzB/C,IAAA,CAACV,IAAI,EAACiE,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAV,QAAA,cACvB/C,IAAA,CAACT,IAAI,EAAC4D,EAAE,CAAE,CAAEO,YAAY,CAAE,CAAE,CAAE,CAAAX,QAAA,cAC5B7C,KAAA,CAACV,WAAW,EAAAuD,QAAA,eACV/C,IAAA,CAACP,UAAU,EAACkE,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAb,QAAA,CAAC,iBAEtC,CAAY,CAAC,cACb7C,KAAA,CAACT,UAAU,EAACkE,OAAO,CAAC,IAAI,CAACV,KAAK,CAAC,SAAS,CAAAF,QAAA,EAAC,GACtC,CAACvC,KAAK,CAACE,OAAO,CAACmD,OAAO,CAAC,CAAC,CAAC,EAChB,CAAC,cACb3D,KAAA,CAACJ,GAAG,EAACsD,EAAE,CAAE,CAAE,CAAAL,QAAA,eACT/C,IAAA,CAACP,UAAU,EAACkE,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAb,QAAA,CAAC,eAEtC,CAAY,CAAC,cACb/C,IAAA,CAACN,IAAI,EAAAqD,QAAA,CACFvC,KAAK,CAACG,QAAQ,CAACmD,GAAG,CAACC,CAAC,eACnB/D,IAAA,CAACL,QAAQ,EAAAoD,QAAA,cACP/C,IAAA,CAACJ,YAAY,EACXoE,OAAO,CAAE,GAAGD,CAAC,CAACjD,MAAM,KAAKiD,CAAC,CAACE,MAAM,SAAU,CAC3CC,SAAS,CAAE,cAAcH,CAAC,CAACI,OAAO,CAACN,OAAO,CAAC,CAAC,CAAC,EAAG,CACjD,CAAC,EAJWE,CAAC,CAACjD,MAKP,CACX,CAAC,CACE,CAAC,EACJ,CAAC,EACK,CAAC,CACV,CAAC,CACH,CAAC,cAGPd,IAAA,CAACV,IAAI,EAACiE,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAV,QAAA,cACvB/C,IAAA,CAACT,IAAI,EAAC4D,EAAE,CAAE,CAAEO,YAAY,CAAE,CAAE,CAAE,CAAAX,QAAA,cAC5B7C,KAAA,CAACV,WAAW,EAAAuD,QAAA,eACV/C,IAAA,CAACP,UAAU,EAACkE,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAb,QAAA,CAAC,aAEtC,CAAY,CAAC,cACb7C,KAAA,CAACJ,GAAG,EACFsE,SAAS,CAAC,MAAM,CAChBjB,EAAE,CAAE,CACFkB,OAAO,CAAE,MAAM,CACfC,GAAG,CAAE,CAAC,CACNC,QAAQ,CAAE,MAAM,CAChBC,UAAU,CAAE,QACd,CAAE,CACFC,QAAQ,CAAEzC,CAAC,EAAI,CACbA,CAAC,CAAC0C,cAAc,CAAC,CAAC,CAClBrC,UAAU,CAAC,CAAC,CACd,CAAE,CAAAU,QAAA,eAEF/C,IAAA,CAACH,SAAS,EACR8E,KAAK,CAAC,QAAQ,CACdxC,IAAI,CAAC,QAAQ,CACbC,KAAK,CAAExB,KAAK,CAACE,MAAO,CACpB8D,QAAQ,CAAE7C,iBAAkB,CAC5B8C,QAAQ,MACT,CAAC,cACF7E,IAAA,CAACH,SAAS,EACR8E,KAAK,CAAC,UAAU,CAChBxC,IAAI,CAAC,KAAK,CACV2C,IAAI,CAAC,QAAQ,CACb1C,KAAK,CAAExB,KAAK,CAACG,GAAI,CACjB6D,QAAQ,CAAE7C,iBAAkB,CAC5B8C,QAAQ,MACT,CAAC,cACF7E,IAAA,CAACZ,MAAM,EACL0F,IAAI,CAAC,QAAQ,CACbnB,OAAO,CAAC,WAAW,CACnBR,EAAE,CAAE,CAAEO,YAAY,CAAE,CAAC,CAAEN,EAAE,CAAE,CAAE,CAAE,CAAAL,QAAA,CAChC,YAED,CAAQ,CAAC,EACN,CAAC,EACK,CAAC,CACV,CAAC,CACH,CAAC,EACH,CAAC,CACE,CAAC,EACZ,CAAC,CAEP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}